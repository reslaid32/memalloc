/* The code was generated using resources from https://blog.rchapman.org/posts/Linux_System_Call_Table_for_x86_64/ using the generation script (generate_x86_64_syscalls_table.py) */
#if !defined(__X86_64_SYSCALLS_H_LOADED)
#define __X86_64_SYSCALLS_H_LOADED
typedef enum SystemCall {
    SYS_READ = 0, // ['%rdi: unsigned int fd', '%rsi: char *buf', '%rdx: size_t count']
    SYS_WRITE = 1, // ['%rdi: unsigned int fd', '%rsi: const char *buf', '%rdx: size_t count']
    SYS_OPEN = 2, // ['%rdi: const char *filename', '%rsi: int flags', '%rdx: int mode']
    SYS_CLOSE = 3, // ['%rdi: unsigned int fd']
    SYS_STAT = 4, // ['%rdi: const char *filename', '%rsi: struct stat *statbuf']
    SYS_FSTAT = 5, // ['%rdi: unsigned int fd', '%rsi: struct stat *statbuf']
    SYS_LSTAT = 6, // ['%rdi: fconst char *filename', '%rsi: struct stat *statbuf']
    SYS_POLL = 7, // ['%rdi: struct poll_fd *ufds', '%rsi: unsigned int nfds', '%rdx: long timeout_msecs']
    SYS_LSEEK = 8, // ['%rdi: unsigned int fd', '%rsi: off_t offset', '%rdx: unsigned int origin']
    SYS_MMAP = 9, // ['%rdi: unsigned long addr', '%rsi: unsigned long len', '%rdx: unsigned long prot', '%r10: unsigned long flags', '%r8: unsigned long fd', '%r9: unsigned long off']
    SYS_MPROTECT = 10, // ['%rdi: unsigned long start', '%rsi: size_t len', '%rdx: unsigned long prot']
    SYS_MUNMAP = 11, // ['%rdi: unsigned long addr', '%rsi: size_t len']
    SYS_BRK = 12, // ['%rdi: unsigned long brk']
    SYS_RT_SIGACTION = 13, // ['%rdi: int sig', '%rsi: const struct sigaction *act', '%rdx: struct sigaction *oact', '%r10: size_t sigsetsize']
    SYS_RT_SIGPROCMASK = 14, // ['%rdi: int how', '%rsi: sigset_t *nset', '%rdx: sigset_t *oset', '%r10: size_t sigsetsize']
    SYS_RT_SIGRETURN = 15, // ['%rdi: unsigned long __unused']
    SYS_IOCTL = 16, // ['%rdi: unsigned int fd', '%rsi: unsigned int cmd', '%rdx: unsigned long arg']
    SYS_PREAD64 = 17, // ['%rdi: unsigned long fd', '%rsi: char *buf', '%rdx: size_t count', '%r10: loff_t pos']
    SYS_PWRITE64 = 18, // ['%rdi: unsigned int fd', '%rsi: const char *buf', '%rdx: size_t count', '%r10: loff_t pos']
    SYS_READV = 19, // ['%rdi: unsigned long fd', '%rsi: const struct iovec *vec', '%rdx: unsigned long vlen']
    SYS_WRITEV = 20, // ['%rdi: unsigned long fd', '%rsi: const struct iovec *vec', '%rdx: unsigned long vlen']
    SYS_ACCESS = 21, // ['%rdi: const char *filename', '%rsi: int mode']
    SYS_PIPE = 22, // ['%rdi: int *filedes']
    SYS_SELECT = 23, // ['%rdi: int n', '%rsi: fd_set *inp', '%rdx: fd_set *outp', '%r10: fd_set*exp', '%r8: struct timeval *tvp']
    SYS_SCHED_YIELD = 24, // No arguments
    SYS_MREMAP = 25, // ['%rdi: unsigned long addr', '%rsi: unsigned long old_len', '%rdx: unsigned long new_len', '%r10: unsigned long flags', '%r8: unsigned long new_addr']
    SYS_MSYNC = 26, // ['%rdi: unsigned long start', '%rsi: size_t len', '%rdx: int flags']
    SYS_MINCORE = 27, // ['%rdi: unsigned long start', '%rsi: size_t len', '%rdx: unsigned char *vec']
    SYS_MADVISE = 28, // ['%rdi: unsigned long start', '%rsi: size_t len_in', '%rdx: int behavior']
    SYS_SHMGET = 29, // ['%rdi: key_t key', '%rsi: size_t size', '%rdx: int shmflg']
    SYS_SHMAT = 30, // ['%rdi: int shmid', '%rsi: char *shmaddr', '%rdx: int shmflg']
    SYS_SHMCTL = 31, // ['%rdi: int shmid', '%rsi: int cmd', '%rdx: struct shmid_ds *buf']
    SYS_DUP = 32, // ['%rdi: unsigned int fildes']
    SYS_DUP2 = 33, // ['%rdi: unsigned int oldfd', '%rsi: unsigned int newfd']
    SYS_PAUSE = 34, // No arguments
    SYS_NANOSLEEP = 35, // ['%rdi: struct timespec *rqtp', '%rsi: struct timespec *rmtp']
    SYS_GETITIMER = 36, // ['%rdi: int which', '%rsi: struct itimerval *value']
    SYS_ALARM = 37, // ['%rdi: unsigned int seconds']
    SYS_SETITIMER = 38, // ['%rdi: int which', '%rsi: struct itimerval *value', '%rdx: struct itimerval *ovalue']
    SYS_GETPID = 39, // No arguments
    SYS_SENDFILE = 40, // ['%rdi: int out_fd', '%rsi: int in_fd', '%rdx: off_t *offset', '%r10: size_t count']
    SYS_SOCKET = 41, // ['%rdi: int family', '%rsi: int type', '%rdx: int protocol']
    SYS_CONNECT = 42, // ['%rdi: int fd', '%rsi: struct sockaddr *uservaddr', '%rdx: int addrlen']
    SYS_ACCEPT = 43, // ['%rdi: int fd', '%rsi: struct sockaddr *upeer_sockaddr', '%rdx: int *upeer_addrlen']
    SYS_SENDTO = 44, // ['%rdi: int fd', '%rsi: void *buff', '%rdx: size_t len', '%r10: unsigned flags', '%r8: struct sockaddr *addr', '%r9: int addr_len']
    SYS_RECVFROM = 45, // ['%rdi: int fd', '%rsi: void *ubuf', '%rdx: size_t size', '%r10: unsigned flags', '%r8: struct sockaddr *addr', '%r9: int *addr_len']
    SYS_SENDMSG = 46, // ['%rdi: int fd', '%rsi: struct msghdr *msg', '%rdx: unsigned flags']
    SYS_RECVMSG = 47, // ['%rdi: int fd', '%rsi: struct msghdr *msg', '%rdx: unsigned int flags']
    SYS_SHUTDOWN = 48, // ['%rdi: int fd', '%rsi: int how']
    SYS_BIND = 49, // ['%rdi: int fd', '%rsi: struct sokaddr *umyaddr', '%rdx: int addrlen']
    SYS_LISTEN = 50, // ['%rdi: int fd', '%rsi: int backlog']
    SYS_GETSOCKNAME = 51, // ['%rdi: int fd', '%rsi: struct sockaddr *usockaddr', '%rdx: int *usockaddr_len']
    SYS_GETPEERNAME = 52, // ['%rdi: int fd', '%rsi: struct sockaddr *usockaddr', '%rdx: int *usockaddr_len']
    SYS_SOCKETPAIR = 53, // ['%rdi: int family', '%rsi: int type', '%rdx: int protocol', '%r10: int *usockvec']
    SYS_SETSOCKOPT = 54, // ['%rdi: int fd', '%rsi: int level', '%rdx: int optname', '%r10: char *optval', '%r8: int optlen']
    SYS_GETSOCKOPT = 55, // ['%rdi: int fd', '%rsi: int level', '%rdx: int optname', '%r10: char *optval', '%r8: int *optlen']
    SYS_CLONE = 56, // ['%rdi: unsigned long clone_flags', '%rsi: unsigned long newsp', '%rdx: void *parent_tid', '%r10: void *child_tid', '%r8: unsigned int tid']
    SYS_FORK = 57, // No arguments
    SYS_VFORK = 58, // No arguments
    SYS_EXECVE = 59, // ['%rdi: const char *filename', '%rsi: const char *const argv[]', '%rdx: const char *const envp[]']
    SYS_EXIT = 60, // ['%rdi: int error_code']
    SYS_WAIT4 = 61, // ['%rdi: pid_t upid', '%rsi: int *stat_addr', '%rdx: int options', '%r10: struct rusage *ru']
    SYS_KILL = 62, // ['%rdi: pid_t pid', '%rsi: int sig']
    SYS_UNAME = 63, // ['%rdi: struct old_utsname *name']
    SYS_SEMGET = 64, // ['%rdi: key_t key', '%rsi: int nsems', '%rdx: int semflg']
    SYS_SEMOP = 65, // ['%rdi: int semid', '%rsi: struct sembuf *tsops', '%rdx: unsigned nsops']
    SYS_SEMCTL = 66, // ['%rdi: int semid', '%rsi: int semnum', '%rdx: int cmd', '%r10: union semun arg']
    SYS_SHMDT = 67, // ['%rdi: char *shmaddr']
    SYS_MSGGET = 68, // ['%rdi: key_t key', '%rsi: int msgflg']
    SYS_MSGSND = 69, // ['%rdi: int msqid', '%rsi: struct msgbuf *msgp', '%rdx: size_t msgsz', '%r10: int msgflg']
    SYS_MSGRCV = 70, // ['%rdi: int msqid', '%rsi: struct msgbuf *msgp', '%rdx: size_t msgsz', '%r10: long msgtyp', '%r8: int msgflg']
    SYS_MSGCTL = 71, // ['%rdi: int msqid', '%rsi: int cmd', '%rdx: struct msqid_ds *buf']
    SYS_FCNTL = 72, // ['%rdi: unsigned int fd', '%rsi: unsigned int cmd', '%rdx: unsigned long arg']
    SYS_FLOCK = 73, // ['%rdi: unsigned int fd', '%rsi: unsigned int cmd']
    SYS_FSYNC = 74, // ['%rdi: unsigned int fd']
    SYS_FDATASYNC = 75, // ['%rdi: unsigned int fd']
    SYS_TRUNCATE = 76, // ['%rdi: const char *path', '%rsi: long length']
    SYS_FTRUNCATE = 77, // ['%rdi: unsigned int fd', '%rsi: unsigned long length']
    SYS_GETDENTS = 78, // ['%rdi: unsigned int fd', '%rsi: struct linux_dirent *dirent', '%rdx: unsigned int count']
    SYS_GETCWD = 79, // ['%rdi: char *buf', '%rsi: unsigned long size']
    SYS_CHDIR = 80, // ['%rdi: const char *filename']
    SYS_FCHDIR = 81, // ['%rdi: unsigned int fd']
    SYS_RENAME = 82, // ['%rdi: const char *oldname', '%rsi: const char *newname']
    SYS_MKDIR = 83, // ['%rdi: const char *pathname', '%rsi: int mode']
    SYS_RMDIR = 84, // ['%rdi: const char *pathname']
    SYS_CREAT = 85, // ['%rdi: const char *pathname', '%rsi: int mode']
    SYS_LINK = 86, // ['%rdi: const char *oldname', '%rsi: const char *newname']
    SYS_UNLINK = 87, // ['%rdi: const char *pathname']
    SYS_SYMLINK = 88, // ['%rdi: const char *oldname', '%rsi: const char *newname']
    SYS_READLINK = 89, // ['%rdi: const char *path', '%rsi: char *buf', '%rdx: int bufsiz']
    SYS_CHMOD = 90, // ['%rdi: const char *filename', '%rsi: mode_t mode']
    SYS_FCHMOD = 91, // ['%rdi: unsigned int fd', '%rsi: mode_t mode']
    SYS_CHOWN = 92, // ['%rdi: const char *filename', '%rsi: uid_t user', '%rdx: gid_t group']
    SYS_FCHOWN = 93, // ['%rdi: unsigned int fd', '%rsi: uid_t user', '%rdx: gid_t group']
    SYS_LCHOWN = 94, // ['%rdi: const char *filename', '%rsi: uid_t user', '%rdx: gid_t group']
    SYS_UMASK = 95, // ['%rdi: int mask']
    SYS_GETTIMEOFDAY = 96, // ['%rdi: struct timeval *tv', '%rsi: struct timezone *tz']
    SYS_GETRLIMIT = 97, // ['%rdi: unsigned int resource', '%rsi: struct rlimit *rlim']
    SYS_GETRUSAGE = 98, // ['%rdi: int who', '%rsi: struct rusage *ru']
    SYS_SYSINFO = 99, // ['%rdi: struct sysinfo *info']
    SYS_TIMES = 100, // ['%rdi: struct tms *tbuf']
    SYS_PTRACE = 101, // ['%rdi: long request', '%rsi: long pid', '%rdx: unsigned long addr', '%r10: unsigned long data']
    SYS_GETUID = 102, // No arguments
    SYS_SYSLOG = 103, // ['%rdi: int type', '%rsi: char *buf', '%rdx: int len']
    SYS_GETGID = 104, // No arguments
    SYS_SETUID = 105, // ['%rdi: uid_t uid']
    SYS_SETGID = 106, // ['%rdi: gid_t gid']
    SYS_GETEUID = 107, // No arguments
    SYS_GETEGID = 108, // No arguments
    SYS_SETPGID = 109, // ['%rdi: pid_t pid', '%rsi: pid_t pgid']
    SYS_GETPPID = 110, // No arguments
    SYS_GETPGRP = 111, // No arguments
    SYS_SETSID = 112, // No arguments
    SYS_SETREUID = 113, // ['%rdi: uid_t ruid', '%rsi: uid_t euid']
    SYS_SETREGID = 114, // ['%rdi: gid_t rgid', '%rsi: gid_t egid']
    SYS_GETGROUPS = 115, // ['%rdi: int gidsetsize', '%rsi: gid_t *grouplist']
    SYS_SETGROUPS = 116, // ['%rdi: int gidsetsize', '%rsi: gid_t *grouplist']
    SYS_SETRESUID = 117, // ['%rdi: uid_t *ruid', '%rsi: uid_t *euid', '%rdx: uid_t *suid']
    SYS_GETRESUID = 118, // ['%rdi: uid_t *ruid', '%rsi: uid_t *euid', '%rdx: uid_t *suid']
    SYS_SETRESGID = 119, // ['%rdi: gid_t rgid', '%rsi: gid_t egid', '%rdx: gid_t sgid']
    SYS_GETRESGID = 120, // ['%rdi: gid_t *rgid', '%rsi: gid_t *egid', '%rdx: gid_t *sgid']
    SYS_GETPGID = 121, // ['%rdi: pid_t pid']
    SYS_SETFSUID = 122, // ['%rdi: uid_t uid']
    SYS_SETFSGID = 123, // ['%rdi: gid_t gid']
    SYS_GETSID = 124, // ['%rdi: pid_t pid']
    SYS_CAPGET = 125, // ['%rdi: cap_user_header_t header', '%rsi: cap_user_data_t dataptr']
    SYS_CAPSET = 126, // ['%rdi: cap_user_header_t header', '%rsi: const cap_user_data_t data']
    SYS_RT_SIGPENDING = 127, // ['%rdi: sigset_t *set', '%rsi: size_t sigsetsize']
    SYS_RT_SIGTIMEDWAIT = 128, // ['%rdi: const sigset_t *uthese', '%rsi: siginfo_t *uinfo', '%rdx: const struct timespec *uts', '%r10: size_t sigsetsize']
    SYS_RT_SIGQUEUEINFO = 129, // ['%rdi: pid_t pid', '%rsi: int sig', '%rdx: siginfo_t *uinfo']
    SYS_RT_SIGSUSPEND = 130, // ['%rdi: sigset_t *unewset', '%rsi: size_t sigsetsize']
    SYS_SIGALTSTACK = 131, // ['%rdi: const stack_t *uss', '%rsi: stack_t *uoss']
    SYS_UTIME = 132, // ['%rdi: char *filename', '%rsi: struct utimbuf *times']
    SYS_MKNOD = 133, // ['%rdi: const char *filename', '%rsi: umode_t mode', '%rdx: unsigned dev']
    SYS_USELIB = 134, // ['%rdi: NOT IMPLEMENTED']
    SYS_PERSONALITY = 135, // ['%rdi: unsigned int personality']
    SYS_USTAT = 136, // ['%rdi: unsigned dev', '%rsi: struct ustat *ubuf']
    SYS_STATFS = 137, // ['%rdi: const char *pathname', '%rsi: struct statfs *buf']
    SYS_FSTATFS = 138, // ['%rdi: unsigned int fd', '%rsi: struct statfs *buf']
    SYS_SYSFS = 139, // ['%rdi: int option', '%rsi: unsigned long arg1', '%rdx: unsigned long arg2']
    SYS_GETPRIORITY = 140, // ['%rdi: int which', '%rsi: int who']
    SYS_SETPRIORITY = 141, // ['%rdi: int which', '%rsi: int who', '%rdx: int niceval']
    SYS_SCHED_SETPARAM = 142, // ['%rdi: pid_t pid', '%rsi: struct sched_param *param']
    SYS_SCHED_GETPARAM = 143, // ['%rdi: pid_t pid', '%rsi: struct sched_param *param']
    SYS_SCHED_SETSCHEDULER = 144, // ['%rdi: pid_t pid', '%rsi: int policy', '%rdx: struct sched_param *param']
    SYS_SCHED_GETSCHEDULER = 145, // ['%rdi: pid_t pid']
    SYS_SCHED_GET_PRIORITY_MAX = 146, // ['%rdi: int policy']
    SYS_SCHED_GET_PRIORITY_MIN = 147, // ['%rdi: int policy']
    SYS_SCHED_RR_GET_INTERVAL = 148, // ['%rdi: pid_t pid', '%rsi: struct timespec *interval']
    SYS_MLOCK = 149, // ['%rdi: unsigned long start', '%rsi: size_t len']
    SYS_MUNLOCK = 150, // ['%rdi: unsigned long start', '%rsi: size_t len']
    SYS_MLOCKALL = 151, // ['%rdi: int flags']
    SYS_MUNLOCKALL = 152, // No arguments
    SYS_VHANGUP = 153, // No arguments
    SYS_MODIFY_LDT = 154, // ['%rdi: int func', '%rsi: void *ptr', '%rdx: unsigned long bytecount']
    SYS_PIVOT_ROOT = 155, // ['%rdi: const char *new_root', '%rsi: const char *put_old']
    SYS__SYSCTL = 156, // ['%rdi: struct __sysctl_args *args']
    SYS_PRCTL = 157, // ['%rdi: int option', '%rsi: unsigned long arg2', '%rdx: unsigned long arg3', '%r10: unsigned long arg4', '%r9: unsigned long arg5']
    SYS_ARCH_PRCTL = 158, // ['%rdi: struct task_struct *task', '%rsi: int code', '%rdx: unsigned long *addr']
    SYS_ADJTIMEX = 159, // ['%rdi: struct timex *txc_p']
    SYS_SETRLIMIT = 160, // ['%rdi: unsigned int resource', '%rsi: struct rlimit *rlim']
    SYS_CHROOT = 161, // ['%rdi: const char *filename']
    SYS_SYNC = 162, // No arguments
    SYS_ACCT = 163, // ['%rdi: const char *name']
    SYS_SETTIMEOFDAY = 164, // ['%rdi: struct timeval *tv', '%rsi: struct timezone *tz']
    SYS_MOUNT = 165, // ['%rdi: char *dev_name', '%rsi: char *dir_name', '%rdx: char *type', '%r10: unsigned long flags', '%r8: void *data']
    SYS_UMOUNT2 = 166, // ['%rdi: const char *target', '%rsi: int flags']
    SYS_SWAPON = 167, // ['%rdi: const char *specialfile', '%rsi: int swap_flags']
    SYS_SWAPOFF = 168, // ['%rdi: const char *specialfile']
    SYS_REBOOT = 169, // ['%rdi: int magic1', '%rsi: int magic2', '%rdx: unsigned int cmd', '%r10: void *arg']
    SYS_SETHOSTNAME = 170, // ['%rdi: char *name', '%rsi: int len']
    SYS_SETDOMAINNAME = 171, // ['%rdi: char *name', '%rsi: int len']
    SYS_IOPL = 172, // ['%rdi: unsigned int level', '%rsi: struct pt_regs *regs']
    SYS_IOPERM = 173, // ['%rdi: unsigned long from', '%rsi: unsigned long num', '%rdx: int turn_on']
    SYS_CREATE_MODULE = 174, // ['%rdi: REMOVED IN Linux 2.6']
    SYS_INIT_MODULE = 175, // ['%rdi: void *umod', '%rsi: unsigned long len', '%rdx: const char *uargs']
    SYS_DELETE_MODULE = 176, // ['%rdi: const chat *name_user', '%rsi: unsigned int flags']
    SYS_GET_KERNEL_SYMS = 177, // ['%rdi: REMOVED IN Linux 2.6']
    SYS_QUERY_MODULE = 178, // ['%rdi: REMOVED IN Linux 2.6']
    SYS_QUOTACTL = 179, // ['%rdi: unsigned int cmd', '%rsi: const char *special', '%rdx: qid_t id', '%r10: void *addr']
    SYS_NFSSERVCTL = 180, // ['%rdi: NOT IMPLEMENTED']
    SYS_GETPMSG = 181, // ['%rdi: NOT IMPLEMENTED']
    SYS_PUTPMSG = 182, // ['%rdi: NOT IMPLEMENTED']
    SYS_AFS_SYSCALL = 183, // ['%rdi: NOT IMPLEMENTED']
    SYS_TUXCALL = 184, // ['%rdi: NOT IMPLEMENTED']
    SYS_SECURITY = 185, // ['%rdi: NOT IMPLEMENTED']
    SYS_GETTID = 186, // No arguments
    SYS_READAHEAD = 187, // ['%rdi: int fd', '%rsi: loff_t offset', '%rdx: size_t count']
    SYS_SETXATTR = 188, // ['%rdi: const char *pathname', '%rsi: const char *name', '%rdx: const void *value', '%r10: size_t size', '%r8: int flags']
    SYS_LSETXATTR = 189, // ['%rdi: const char *pathname', '%rsi: const char *name', '%rdx: const void *value', '%r10: size_t size', '%r8: int flags']
    SYS_FSETXATTR = 190, // ['%rdi: int fd', '%rsi: const char *name', '%rdx: const void *value', '%r10: size_t size', '%r8: int flags']
    SYS_GETXATTR = 191, // ['%rdi: const char *pathname', '%rsi: const char *name', '%rdx: void *value', '%r10: size_t size']
    SYS_LGETXATTR = 192, // ['%rdi: const char *pathname', '%rsi: const char *name', '%rdx: void *value', '%r10: size_t size']
    SYS_FGETXATTR = 193, // ['%rdi: int fd', '%rsi: const har *name', '%rdx: void *value', '%r10: size_t size']
    SYS_LISTXATTR = 194, // ['%rdi: const char *pathname', '%rsi: char *list', '%rdx: size_t size']
    SYS_LLISTXATTR = 195, // ['%rdi: const char *pathname', '%rsi: char *list', '%rdx: size_t size']
    SYS_FLISTXATTR = 196, // ['%rdi: int fd', '%rsi: char *list', '%rdx: size_t size']
    SYS_REMOVEXATTR = 197, // ['%rdi: const char *pathname', '%rsi: const char *name']
    SYS_LREMOVEXATTR = 198, // ['%rdi: const char *pathname', '%rsi: const char *name']
    SYS_FREMOVEXATTR = 199, // ['%rdi: int fd', '%rsi: const char *name']
    SYS_TKILL = 200, // ['%rdi: pid_t pid', '%rsi: ing sig']
    SYS_TIME = 201, // ['%rdi: time_t *tloc']
    SYS_FUTEX = 202, // ['%rdi: u32 *uaddr', '%rsi: int op', '%rdx: u32 val', '%r10: struct timespec *utime', '%r8: u32 *uaddr2', '%r9: u32 val3']
    SYS_SCHED_SETAFFINITY = 203, // ['%rdi: pid_t pid', '%rsi: unsigned int len', '%rdx: unsigned long *user_mask_ptr']
    SYS_SCHED_GETAFFINITY = 204, // ['%rdi: pid_t pid', '%rsi: unsigned int len', '%rdx: unsigned long *user_mask_ptr']
    SYS_SET_THREAD_AREA = 205, // ['%rdi: NOT IMPLEMENTED. Use arch_prctl']
    SYS_IO_SETUP = 206, // ['%rdi: unsigned nr_events', '%rsi: aio_context_t *ctxp']
    SYS_IO_DESTROY = 207, // ['%rdi: aio_context_t ctx']
    SYS_IO_GETEVENTS = 208, // ['%rdi: aio_context_t ctx_id', '%rsi: long min_nr', '%rdx: long nr', '%r10: struct io_event *events']
    SYS_IO_SUBMIT = 209, // ['%rdi: aio_context_t ctx_id', '%rsi: long nr', '%rdx: struct iocb **iocbpp']
    SYS_IO_CANCEL = 210, // ['%rdi: aio_context_t ctx_id', '%rsi: struct iocb *iocb', '%rdx: struct io_event *result']
    SYS_GET_THREAD_AREA = 211, // ['%rdi: NOT IMPLEMENTED. Use arch_prctl']
    SYS_LOOKUP_DCOOKIE = 212, // ['%rdi: u64 cookie64', '%rsi: long buf', '%rdx: long len']
    SYS_EPOLL_CREATE = 213, // ['%rdi: int size']
    SYS_EPOLL_CTL_OLD = 214, // ['%rdi: NOT IMPLEMENTED']
    SYS_EPOLL_WAIT_OLD = 215, // ['%rdi: NOT IMPLEMENTED']
    SYS_REMAP_FILE_PAGES = 216, // ['%rdi: unsigned long start', '%rsi: unsigned long size', '%rdx: unsigned long prot', '%r10: unsigned long pgoff', '%r8: unsigned long flags']
    SYS_GETDENTS64 = 217, // ['%rdi: unsigned int fd', '%rsi: struct linux_dirent64 *dirent', '%rdx: unsigned int count']
    SYS_SET_TID_ADDRESS = 218, // ['%rdi: int *tidptr']
    SYS_RESTART_SYSCALL = 219, // No arguments
    SYS_SEMTIMEDOP = 220, // ['%rdi: int semid', '%rsi: struct sembuf *tsops', '%rdx: unsigned nsops', '%r10: const struct timespec *timeout']
    SYS_FADVISE64 = 221, // ['%rdi: int fd', '%rsi: loff_t offset', '%rdx: size_t len', '%r10: int advice']
    SYS_TIMER_CREATE = 222, // ['%rdi: const clockid_t which_clock', '%rsi: struct sigevent *timer_event_spec', '%rdx: timer_t *created_timer_id']
    SYS_TIMER_SETTIME = 223, // ['%rdi: timer_t timer_id', '%rsi: int flags', '%rdx: const struct itimerspec *new_setting', '%r10: struct itimerspec *old_setting']
    SYS_TIMER_GETTIME = 224, // ['%rdi: timer_t timer_id', '%rsi: struct itimerspec *setting']
    SYS_TIMER_GETOVERRUN = 225, // ['%rdi: timer_t timer_id']
    SYS_TIMER_DELETE = 226, // ['%rdi: timer_t timer_id']
    SYS_CLOCK_SETTIME = 227, // ['%rdi: const clockid_t which_clock', '%rsi: const struct timespec *tp']
    SYS_CLOCK_GETTIME = 228, // ['%rdi: const clockid_t which_clock', '%rsi: struct timespec *tp']
    SYS_CLOCK_GETRES = 229, // ['%rdi: const clockid_t which_clock', '%rsi: struct timespec *tp']
    SYS_CLOCK_NANOSLEEP = 230, // ['%rdi: const clockid_t which_clock', '%rsi: int flags', '%rdx: const struct timespec *rqtp', '%r10: struct timespec *rmtp']
    SYS_EXIT_GROUP = 231, // ['%rdi: int error_code']
    SYS_EPOLL_WAIT = 232, // ['%rdi: int epfd', '%rsi: struct epoll_event *events', '%rdx: int maxevents', '%r10: int timeout']
    SYS_EPOLL_CTL = 233, // ['%rdi: int epfd', '%rsi: int op', '%rdx: int fd', '%r10: struct epoll_event *event']
    SYS_TGKILL = 234, // ['%rdi: pid_t tgid', '%rsi: pid_t pid', '%rdx: int sig']
    SYS_UTIMES = 235, // ['%rdi: char *filename', '%rsi: struct timeval *utimes']
    SYS_VSERVER = 236, // ['%rdi: NOT IMPLEMENTED']
    SYS_MBIND = 237, // ['%rdi: unsigned long start', '%rsi: unsigned long len', '%rdx: unsigned long mode', '%r10: unsigned long *nmask', '%r8: unsigned long maxnode', '%r9: unsigned flags']
    SYS_SET_MEMPOLICY = 238, // ['%rdi: int mode', '%rsi: unsigned long *nmask', '%rdx: unsigned long maxnode']
    SYS_GET_MEMPOLICY = 239, // ['%rdi: int *policy', '%rsi: unsigned long *nmask', '%rdx: unsigned long maxnode', '%r10: unsigned long addr', '%r8: unsigned long flags']
    SYS_MQ_OPEN = 240, // ['%rdi: const char *u_name', '%rsi: int oflag', '%rdx: mode_t mode', '%r10: struct mq_attr *u_attr']
    SYS_MQ_UNLINK = 241, // ['%rdi: const char *u_name']
    SYS_MQ_TIMEDSEND = 242, // ['%rdi: mqd_t mqdes', '%rsi: const char *u_msg_ptr', '%rdx: size_t msg_len', '%r10: unsigned int msg_prio', '%r8: const stuct timespec *u_abs_timeout']
    SYS_MQ_TIMEDRECEIVE = 243, // ['%rdi: mqd_t mqdes', '%rsi: char *u_msg_ptr', '%rdx: size_t msg_len', '%r10: unsigned int *u_msg_prio', '%r8: const struct timespec *u_abs_timeout']
    SYS_MQ_NOTIFY = 244, // ['%rdi: mqd_t mqdes', '%rsi: const struct sigevent *u_notification']
    SYS_MQ_GETSETATTR = 245, // ['%rdi: mqd_t mqdes', '%rsi: const struct mq_attr *u_mqstat', '%rdx: struct mq_attr *u_omqstat']
    SYS_KEXEC_LOAD = 246, // ['%rdi: unsigned long entry', '%rsi: unsigned long nr_segments', '%rdx: struct kexec_segment *segments', '%r10: unsigned long flags']
    SYS_WAITID = 247, // ['%rdi: int which', '%rsi: pid_t upid', '%rdx: struct siginfo *infop', '%r10: int options', '%r8: struct rusage *ru']
    SYS_ADD_KEY = 248, // ['%rdi: const char *_type', '%rsi: const char *_description', '%rdx: const void *_payload', '%r10: size_t plen']
    SYS_REQUEST_KEY = 249, // ['%rdi: const char *_type', '%rsi: const char *_description', '%rdx: const char *_callout_info', '%r10: key_serial_t destringid']
    SYS_KEYCTL = 250, // ['%rdi: int option', '%rsi: unsigned long arg2', '%rdx: unsigned long arg3', '%r10: unsigned long arg4', '%r8: unsigned long arg5']
    SYS_IOPRIO_SET = 251, // ['%rdi: int which', '%rsi: int who', '%rdx: int ioprio']
    SYS_IOPRIO_GET = 252, // ['%rdi: int which', '%rsi: int who']
    SYS_INOTIFY_INIT = 253, // No arguments
    SYS_INOTIFY_ADD_WATCH = 254, // ['%rdi: int fd', '%rsi: const char *pathname', '%rdx: u32 mask']
    SYS_INOTIFY_RM_WATCH = 255, // ['%rdi: int fd', '%rsi: __s32 wd']
    SYS_MIGRATE_PAGES = 256, // ['%rdi: pid_t pid', '%rsi: unsigned long maxnode', '%rdx: const unsigned long *old_nodes', '%r10: const unsigned long *new_nodes']
    SYS_OPENAT = 257, // ['%rdi: int dfd', '%rsi: const char *filename', '%rdx: int flags', '%r10: int mode']
    SYS_MKDIRAT = 258, // ['%rdi: int dfd', '%rsi: const char *pathname', '%rdx: int mode']
    SYS_MKNODAT = 259, // ['%rdi: int dfd', '%rsi: const char *filename', '%rdx: int mode', '%r10: unsigned dev']
    SYS_FCHOWNAT = 260, // ['%rdi: int dfd', '%rsi: const char *filename', '%rdx: uid_t user', '%r10: gid_t group', '%r8: int flag']
    SYS_FUTIMESAT = 261, // ['%rdi: int dfd', '%rsi: const char *filename', '%rdx: struct timeval *utimes']
    SYS_NEWFSTATAT = 262, // ['%rdi: int dfd', '%rsi: const char *filename', '%rdx: struct stat *statbuf', '%r10: int flag']
    SYS_UNLINKAT = 263, // ['%rdi: int dfd', '%rsi: const char *pathname', '%rdx: int flag']
    SYS_RENAMEAT = 264, // ['%rdi: int oldfd', '%rsi: const char *oldname', '%rdx: int newfd', '%r10: const char *newname']
    SYS_LINKAT = 265, // ['%rdi: int oldfd', '%rsi: const char *oldname', '%rdx: int newfd', '%r10: const char *newname', '%r8: int flags']
    SYS_SYMLINKAT = 266, // ['%rdi: const char *oldname', '%rsi: int newfd', '%rdx: const char *newname']
    SYS_READLINKAT = 267, // ['%rdi: int dfd', '%rsi: const char *pathname', '%rdx: char *buf', '%r10: int bufsiz']
    SYS_FCHMODAT = 268, // ['%rdi: int dfd', '%rsi: const char *filename', '%rdx: mode_t mode']
    SYS_FACCESSAT = 269, // ['%rdi: int dfd', '%rsi: const char *filename', '%rdx: int mode']
    SYS_PSELECT6 = 270, // ['%rdi: int n', '%rsi: fd_set *inp', '%rdx: fd_set *outp', '%r10: fd_set *exp', '%r8: struct timespec *tsp', '%r9: void *sig']
    SYS_PPOLL = 271, // ['%rdi: struct pollfd *ufds', '%rsi: unsigned int nfds', '%rdx: struct timespec *tsp', '%r10: const sigset_t *sigmask', '%r8: size_t sigsetsize']
    SYS_UNSHARE = 272, // ['%rdi: unsigned long unshare_flags']
    SYS_SET_ROBUST_LIST = 273, // ['%rdi: struct robust_list_head *head', '%rsi: size_t len']
    SYS_GET_ROBUST_LIST = 274, // ['%rdi: int pid', '%rsi: struct robust_list_head **head_ptr', '%rdx: size_t *len_ptr']
    SYS_SPLICE = 275, // ['%rdi: int fd_in', '%rsi: loff_t *off_in', '%rdx: int fd_out', '%r10: loff_t *off_out', '%r8: size_t len', '%r9: unsigned int flags']
    SYS_TEE = 276, // ['%rdi: int fdin', '%rsi: int fdout', '%rdx: size_t len', '%r10: unsigned int flags']
    SYS_SYNC_FILE_RANGE = 277, // ['%rdi: long fd', '%rsi: loff_t offset', '%rdx: loff_t bytes', '%r10: long flags']
    SYS_VMSPLICE = 278, // ['%rdi: int fd', '%rsi: const struct iovec *iov', '%rdx: unsigned long nr_segs', '%r10: unsigned int flags']
    SYS_MOVE_PAGES = 279, // ['%rdi: pid_t pid', '%rsi: unsigned long nr_pages', '%rdx: const void **pages', '%r10: const int *nodes', '%r8: int *status', '%r9: int flags']
    SYS_UTIMENSAT = 280, // ['%rdi: int dfd', '%rsi: const char *filename', '%rdx: struct timespec *utimes', '%r10: int flags']
    SYS_EPOLL_PWAIT = 281, // ['%rdi: int epfd', '%rsi: struct epoll_event *events', '%rdx: int maxevents', '%r10: int timeout', '%r8: const sigset_t *sigmask', '%r9: size_t sigsetsize']
    SYS_SIGNALFD = 282, // ['%rdi: int ufd', '%rsi: sigset_t *user_mask', '%rdx: size_t sizemask']
    SYS_TIMERFD_CREATE = 283, // ['%rdi: int clockid', '%rsi: int flags']
    SYS_EVENTFD = 284, // ['%rdi: unsigned int count']
    SYS_FALLOCATE = 285, // ['%rdi: long fd', '%rsi: long mode', '%rdx: loff_t offset', '%r10: loff_t len']
    SYS_TIMERFD_SETTIME = 286, // ['%rdi: int ufd', '%rsi: int flags', '%rdx: const struct itimerspec *utmr', '%r10: struct itimerspec *otmr']
    SYS_TIMERFD_GETTIME = 287, // ['%rdi: int ufd', '%rsi: struct itimerspec *otmr']
    SYS_ACCEPT4 = 288, // ['%rdi: int fd', '%rsi: struct sockaddr *upeer_sockaddr', '%rdx: int *upeer_addrlen', '%r10: int flags']
    SYS_SIGNALFD4 = 289, // ['%rdi: int ufd', '%rsi: sigset_t *user_mask', '%rdx: size_t sizemask', '%r10: int flags']
    SYS_EVENTFD2 = 290, // ['%rdi: unsigned int count', '%rsi: int flags']
    SYS_EPOLL_CREATE1 = 291, // ['%rdi: int flags']
    SYS_DUP3 = 292, // ['%rdi: unsigned int oldfd', '%rsi: unsigned int newfd', '%rdx: int flags']
    SYS_PIPE2 = 293, // ['%rdi: int *filedes', '%rsi: int flags']
    SYS_INOTIFY_INIT1 = 294, // ['%rdi: int flags']
    SYS_PREADV = 295, // ['%rdi: unsigned long fd', '%rsi: const struct iovec *vec', '%rdx: unsigned long vlen', '%r10: unsigned long pos_l', '%r8: unsigned long pos_h']
    SYS_PWRITEV = 296, // ['%rdi: unsigned long fd', '%rsi: const struct iovec *vec', '%rdx: unsigned long vlen', '%r10: unsigned long pos_l', '%r8: unsigned long pos_h']
    SYS_RT_TGSIGQUEUEINFO = 297, // ['%rdi: pid_t tgid', '%rsi: pid_t pid', '%rdx: int sig', '%r10: siginfo_t *uinfo']
    SYS_PERF_EVENT_OPEN = 298, // ['%rdi: struct perf_event_attr *attr_uptr', '%rsi: pid_t pid', '%rdx: int cpu', '%r10: int group_fd', '%r8: unsigned long flags']
    SYS_RECVMMSG = 299, // ['%rdi: int fd', '%rsi: struct msghdr *mmsg', '%rdx: unsigned int vlen', '%r10: unsigned int flags', '%r8: struct timespec *timeout']
    SYS_FANOTIFY_INIT = 300, // ['%rdi: unsigned int flags', '%rsi: unsigned int event_f_flags']
    SYS_FANOTIFY_MARK = 301, // ['%rdi: long fanotify_fd', '%rsi: long flags', '%rdx: __u64 mask', '%r10: long dfd', '%r8: long pathname']
    SYS_PRLIMIT64 = 302, // ['%rdi: pid_t pid', '%rsi: unsigned int resource', '%rdx: const struct rlimit64 *new_rlim', '%r10: struct rlimit64 *old_rlim']
    SYS_NAME_TO_HANDLE_AT = 303, // ['%rdi: int dfd', '%rsi: const char *name', '%rdx: struct file_handle *handle', '%r10: int *mnt_id', '%r8: int flag']
    SYS_OPEN_BY_HANDLE_AT = 304, // ['%rdi: int dfd', '%rsi: const char *name', '%rdx: struct file_handle *handle', '%r10: int *mnt_id', '%r8: int flags']
    SYS_CLOCK_ADJTIME = 305, // ['%rdi: clockid_t which_clock', '%rsi: struct timex *tx']
    SYS_SYNCFS = 306, // ['%rdi: int fd']
    SYS_SENDMMSG = 307, // ['%rdi: int fd', '%rsi: struct mmsghdr *mmsg', '%rdx: unsigned int vlen', '%r10: unsigned int flags']
    SYS_SETNS = 308, // ['%rdi: int fd', '%rsi: int nstype']
    SYS_GETCPU = 309, // ['%rdi: unsigned *cpup', '%rsi: unsigned *nodep', '%rdx: struct getcpu_cache *unused']
    SYS_PROCESS_VM_READV = 310, // ['%rdi: pid_t pid', '%rsi: const struct iovec *lvec', '%rdx: unsigned long liovcnt', '%r10: const struct iovec *rvec', '%r8: unsigned long riovcnt', '%r9: unsigned long flags']
    SYS_PROCESS_VM_WRITEV = 311, // ['%rdi: pid_t pid', '%rsi: const struct iovec *lvec', '%rdx: unsigned long liovcnt', '%r10: const struct iovcc *rvec', '%r8: unsigned long riovcnt', '%r9: unsigned long flags']
    SYS_KCMP = 312, // ['%rdi: pid_t pid1', '%rsi: pid_t pid2', '%rdx: int type', '%r10: unsigned long idx1', '%r8: unsigned long idx2']
    SYS_FINIT_MODULE = 313, // ['%rdi: int fd', '%rsi: const char __user *uargs', '%rdx: int flags']
    SYS_SCHED_SETATTR = 314, // ['%rdi: pid_t pid', '%rsi: struct sched_attr __user *attr', '%rdx: unsigned int flags']
    SYS_SCHED_GETATTR = 315, // ['%rdi: pid_t pid', '%rsi: struct sched_attr __user *attr', '%rdx: unsigned int size', '%r10: unsigned int flags']
    SYS_RENAMEAT2 = 316, // ['%rdi: int olddfd', '%rsi: const char __user *oldname', '%rdx: int newdfd', '%r10: const char __user *newname', '%r8: unsigned int flags']
    SYS_SECCOMP = 317, // ['%rdi: unsigned int op', '%rsi: unsigned int flags', '%rdx: const char __user *uargs']
    SYS_GETRANDOM = 318, // ['%rdi: char __user *buf', '%rsi: size_t count', '%rdx: unsigned int flags']
    SYS_MEMFD_CREATE = 319, // ['%rdi: const char __user *uname_ptr', '%rsi: unsigned\nint flags']
    SYS_KEXEC_FILE_LOAD = 320, // ['%rdi: int kernel_fd', '%rsi: int initrd_fd', '%rdx: unsigned long cmdline_len', '%r10: const char __user *cmdline_ptr', '%r8: unsigned long flags']
    SYS_BPF = 321, // ['%rdi: int cmd', '%rsi: union bpf_attr *attr', '%rdx: unsigned int size']
    STUB_EXECVEAT = 322, // ['%rdi: int dfd', '%rsi: const char __user *filename', '%rdx: const char __user *const __user *argv', '%r10: const char __user *const __user *envp', '%r8: int flags']
    USERFAULTFD = 323, // ['%rdi: int flags']
    MEMBARRIER = 324, // ['%rdi: int cmd', '%rsi: int flags']
    MLOCK2 = 325, // ['%rdi: unsigned long start', '%rsi: size_t len', '%rdx: int flags']
    COPY_FILE_RANGE = 326, // ['%rdi: int fd_in', '%rsi: loff_t __user *off_in', '%rdx: int fd_out', '%r10: loff_t __user * off_out', '%r8: size_t len', '%r9: unsigned int flags']
    PREADV2 = 327, // ['%rdi: unsigned long fd', '%rsi: const struct iovec __user *vec', '%rdx: unsigned long vlen', '%r10: unsigned long pos_l', '%r8: unsigned long pos_h', '%r9: int flags']
    PWRITEV2 = 328, // ['%rdi: unsigned long fd', '%rsi: const struct iovec __user *vec', '%rdx: unsigned long vlen', '%r10: unsigned long pos_l', '%r8: unsigned long pos_h', '%r9: int flags']
    PKEY_MPROTECT = 329, // No arguments
    PKEY_ALLOC = 330, // No arguments
    PKEY_FREE = 331, // No arguments
    STATX = 332, // No arguments
    IO_PGETEVENTS = 333, // No arguments
    RSEQ = 334, // No arguments
} SystemCall;
#endif /* __X86_64_SYSCALLS_H_LOADED */