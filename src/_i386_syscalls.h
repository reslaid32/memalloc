/* The code was generated using resources from https://faculty.nps.edu/cseagle/assembly/sys_call.html using the generation script (generate_i386_syscalls_table.py) */
#if !defined(__I386_SYSCALLS_H_LOADED)
#define __I386_SYSCALLS_H_LOADED
typedef enum SystemCall {
    SYS_EXIT = 1, // ['%ebx: int']
    SYS_FORK = 2, // ['%ebx: struct pt_regs']
    SYS_READ = 3, // ['%ebx: unsigned int', '%ecx: char *', '%edx: size_t']
    SYS_WRITE = 4, // ['%ebx: unsigned int', '%ecx: const char *', '%edx: size_t']
    SYS_OPEN = 5, // ['%ebx: const char *', '%ecx: int', '%edx: int']
    SYS_CLOSE = 6, // ['%ebx: unsigned int']
    SYS_WAITPID = 7, // ['%ebx: pid_t', '%ecx: unsigned int *', '%edx: int']
    SYS_CREAT = 8, // ['%ebx: const char *', '%ecx: int']
    SYS_LINK = 9, // ['%ebx: const char *', '%ecx: const char *']
    SYS_UNLINK = 10, // ['%ebx: const char *']
    SYS_EXECVE = 11, // ['%ebx: struct pt_regs']
    SYS_CHDIR = 12, // ['%ebx: const char *']
    SYS_TIME = 13, // ['%ebx: int *']
    SYS_MKNOD = 14, // ['%ebx: const char *', '%ecx: int', '%edx: dev_t']
    SYS_CHMOD = 15, // ['%ebx: const char *', '%ecx: mode_t']
    SYS_LCHOWN = 16, // ['%ebx: const char *', '%ecx: uid_t', '%edx: gid_t']
    SYS_STAT = 18, // ['%ebx: char *', '%ecx: struct __old_kernel_stat *']
    SYS_LSEEK = 19, // ['%ebx: unsigned int', '%ecx: off_t', '%edx: unsigned int']
    SYS_GETPID = 20, // No arguments
    SYS_MOUNT = 21, // ['%ebx: char *', '%ecx: char *', '%edx: char *']
    SYS_OLDUMOUNT = 22, // ['%ebx: char *']
    SYS_SETUID = 23, // ['%ebx: uid_t']
    SYS_GETUID = 24, // No arguments
    SYS_STIME = 25, // ['%ebx: int *']
    SYS_PTRACE = 26, // ['%ebx: long', '%ecx: long', '%edx: long', '%esx: long']
    SYS_ALARM = 27, // ['%ebx: unsigned int']
    SYS_FSTAT = 28, // ['%ebx: unsigned int', '%ecx: struct __old_kernel_stat *']
    SYS_PAUSE = 29, // No arguments
    SYS_UTIME = 30, // ['%ebx: char *', '%ecx: struct utimbuf *']
    SYS_ACCESS = 33, // ['%ebx: const char *', '%ecx: int']
    SYS_NICE = 34, // ['%ebx: int']
    SYS_SYNC = 36, // No arguments
    SYS_KILL = 37, // ['%ebx: int', '%ecx: int']
    SYS_RENAME = 38, // ['%ebx: const char *', '%ecx: const char *']
    SYS_MKDIR = 39, // ['%ebx: const char *', '%ecx: int']
    SYS_RMDIR = 40, // ['%ebx: const char *']
    SYS_DUP = 41, // ['%ebx: unsigned int']
    SYS_PIPE = 42, // ['%ebx: unsigned long *']
    SYS_TIMES = 43, // ['%ebx: struct tms *']
    SYS_BRK = 45, // ['%ebx: unsigned long']
    SYS_SETGID = 46, // ['%ebx: gid_t']
    SYS_GETGID = 47, // No arguments
    SYS_SIGNAL = 48, // ['%ebx: int', '%ecx: __sighandler_t']
    SYS_GETEUID = 49, // No arguments
    SYS_GETEGID = 50, // No arguments
    SYS_ACCT = 51, // ['%ebx: const char *']
    SYS_UMOUNT = 52, // ['%ebx: char *', '%ecx: int']
    SYS_IOCTL = 54, // ['%ebx: unsigned int', '%ecx: unsigned int', '%edx: unsigned long']
    SYS_FCNTL = 55, // ['%ebx: unsigned int', '%ecx: unsigned int', '%edx: unsigned long']
    SYS_SETPGID = 57, // ['%ebx: pid_t', '%ecx: pid_t']
    SYS_OLDUNAME = 59, // ['%ebx: struct oldold_utsname *']
    SYS_UMASK = 60, // ['%ebx: int']
    SYS_CHROOT = 61, // ['%ebx: const char *']
    SYS_USTAT = 62, // ['%ebx: dev_t', '%ecx: struct ustat *']
    SYS_DUP2 = 63, // ['%ebx: unsigned int', '%ecx: unsigned int']
    SYS_GETPPID = 64, // No arguments
    SYS_GETPGRP = 65, // No arguments
    SYS_SETSID = 66, // No arguments
    SYS_SIGACTION = 67, // ['%ebx: int', '%ecx: conststruct old_sigaction *', '%edx: struct old_sigaction *']
    SYS_SGETMASK = 68, // No arguments
    SYS_SSETMASK = 69, // ['%ebx: int']
    SYS_SETREUID = 70, // ['%ebx: uid_t', '%ecx: uid_t']
    SYS_SETREGID = 71, // ['%ebx: gid_t', '%ecx: gid_t']
    SYS_SIGSUSPEND = 72, // ['%ebx: int', '%ecx: int', '%edx: old_sigset_t']
    SYS_SIGPENDING = 73, // ['%ebx: old_sigset_t *']
    SYS_SETHOSTNAME = 74, // ['%ebx: char *', '%ecx: int']
    SYS_SETRLIMIT = 75, // ['%ebx: unsigned int', '%ecx: struct rlimit *']
    SYS_GETRLIMIT = 76, // ['%ebx: unsigned int', '%ecx: struct rlimit *']
    SYS_GETRUSAGE = 77, // ['%ebx: int', '%ecx: struct rusage *']
    SYS_GETTIMEOFDAY = 78, // ['%ebx: struct timeval *', '%ecx: struct timezone *']
    SYS_SETTIMEOFDAY = 79, // ['%ebx: struct timeval *', '%ecx: struct timezone *']
    SYS_GETGROUPS = 80, // ['%ebx: int', '%ecx: gid_t *']
    SYS_SETGROUPS = 81, // ['%ebx: int', '%ecx: gid_t *']
    OLD_SELECT = 82, // ['%ebx: struct sel_arg_struct *']
    SYS_SYMLINK = 83, // ['%ebx: const char *', '%ecx: const char *']
    SYS_LSTAT = 84, // ['%ebx: char *', '%ecx: struct __old_kernel_stat *']
    SYS_READLINK = 85, // ['%ebx: const char *', '%ecx: char *', '%edx: int']
    SYS_USELIB = 86, // ['%ebx: const char *']
    SYS_SWAPON = 87, // ['%ebx: const char *', '%ecx: int']
    SYS_REBOOT = 88, // ['%ebx: int', '%ecx: int', '%edx: int', '%esx: void *']
    OLD_READDIR = 89, // ['%ebx: unsigned int', '%ecx: void *', '%edx: unsigned int']
    OLD_MMAP = 90, // ['%ebx: struct mmap_arg_struct *']
    SYS_MUNMAP = 91, // ['%ebx: unsigned long', '%ecx: size_t']
    SYS_TRUNCATE = 92, // ['%ebx: const char *', '%ecx: unsigned long']
    SYS_FTRUNCATE = 93, // ['%ebx: unsigned int', '%ecx: unsigned long']
    SYS_FCHMOD = 94, // ['%ebx: unsigned int', '%ecx: mode_t']
    SYS_FCHOWN = 95, // ['%ebx: unsigned int', '%ecx: uid_t', '%edx: gid_t']
    SYS_GETPRIORITY = 96, // ['%ebx: int', '%ecx: int']
    SYS_SETPRIORITY = 97, // ['%ebx: int', '%ecx: int', '%edx: int']
    SYS_STATFS = 99, // ['%ebx: const char *', '%ecx: struct statfs *']
    SYS_FSTATFS = 100, // ['%ebx: unsigned int', '%ecx: struct statfs *']
    SYS_IOPERM = 101, // ['%ebx: unsigned long', '%ecx: unsigned long', '%edx: int']
    SYS_SOCKETCALL = 102, // ['%ebx: int', '%ecx: unsigned long *']
    SYS_SYSLOG = 103, // ['%ebx: int', '%ecx: char *', '%edx: int']
    SYS_SETITIMER = 104, // ['%ebx: int', '%ecx: struct itimerval *', '%edx: struct itimerval *']
    SYS_GETITIMER = 105, // ['%ebx: int', '%ecx: struct itimerval *']
    SYS_NEWSTAT = 106, // ['%ebx: char *', '%ecx: struct stat *']
    SYS_NEWLSTAT = 107, // ['%ebx: char *', '%ecx: struct stat *']
    SYS_NEWFSTAT = 108, // ['%ebx: unsigned int', '%ecx: struct stat *']
    SYS_UNAME = 109, // ['%ebx: struct old_utsname *']
    SYS_IOPL = 110, // ['%ebx: unsigned long']
    SYS_VHANGUP = 111, // No arguments
    SYS_IDLE = 112, // No arguments
    SYS_VM86OLD = 113, // ['%ebx: unsigned long', '%ecx: struct vm86plus_struct *']
    SYS_WAIT4 = 114, // ['%ebx: pid_t', '%ecx: unsigned long *', '%edx: int options', '%esx: struct rusage *']
    SYS_SWAPOFF = 115, // ['%ebx: const char *']
    SYS_SYSINFO = 116, // ['%ebx: struct sysinfo *']
    SYS_IPC = 117, // ['%ebx: uint', '%ecx: int', '%edx: int', '%esx: int', '%edi: void *']
    SYS_FSYNC = 118, // ['%ebx: unsigned int']
    SYS_SIGRETURN = 119, // ['%ebx: unsigned long']
    SYS_CLONE = 120, // ['%ebx: struct pt_regs']
    SYS_SETDOMAINNAME = 121, // ['%ebx: char *', '%ecx: int']
    SYS_NEWUNAME = 122, // ['%ebx: struct new_utsname *']
    SYS_MODIFY_LDT = 123, // ['%ebx: int', '%ecx: void *', '%edx: unsigned long']
    SYS_ADJTIMEX = 124, // ['%ebx: struct timex *']
    SYS_MPROTECT = 125, // ['%ebx: unsigned long', '%ecx: size_t', '%edx: unsigned long']
    SYS_SIGPROCMASK = 126, // ['%ebx: int', '%ecx: old_sigset_t *', '%edx: old_sigset_t *']
    SYS_CREATE_MODULE = 127, // ['%ebx: const char *', '%ecx: size_t']
    SYS_INIT_MODULE = 128, // ['%ebx: const char *', '%ecx: struct module *']
    SYS_DELETE_MODULE = 129, // ['%ebx: const char *']
    SYS_GET_KERNEL_SYMS = 130, // ['%ebx: struct kernel_sym *']
    SYS_QUOTACTL = 131, // ['%ebx: int', '%ecx: const char *', '%edx: int', '%esx: caddr_t']
    SYS_GETPGID = 132, // ['%ebx: pid_t']
    SYS_FCHDIR = 133, // ['%ebx: unsigned int']
    SYS_BDFLUSH = 134, // ['%ebx: int', '%ecx: long']
    SYS_SYSFS = 135, // ['%ebx: int', '%ecx: unsigned long', '%edx: unsigned long']
    SYS_PERSONALITY = 136, // ['%ebx: unsigned long']
    SYS_SETFSUID = 138, // ['%ebx: uid_t']
    SYS_SETFSGID = 139, // ['%ebx: gid_t']
    SYS_LLSEEK = 140, // ['%ebx: unsigned int', '%ecx: unsigned long', '%edx: unsigned long', '%esx: loff_t *', '%edi: unsigned int']
    SYS_GETDENTS = 141, // ['%ebx: unsigned int', '%ecx: void *', '%edx: unsigned int']
    SYS_SELECT = 142, // ['%ebx: int', '%ecx: fd_set *', '%edx: fd_set *', '%esx: fd_set *', '%edi: struct timeval *']
    SYS_FLOCK = 143, // ['%ebx: unsigned int', '%ecx: unsigned int']
    SYS_MSYNC = 144, // ['%ebx: unsigned long', '%ecx: size_t', '%edx: int']
    SYS_READV = 145, // ['%ebx: unsigned long', '%ecx: const struct iovec *', '%edx: unsigned long']
    SYS_WRITEV = 146, // ['%ebx: unsigned long', '%ecx: const struct iovec *', '%edx: unsigned long']
    SYS_GETSID = 147, // ['%ebx: pid_t']
    SYS_FDATASYNC = 148, // ['%ebx: unsigned int']
    SYS_SYSCTL = 149, // ['%ebx: struct __sysctl_args *']
    SYS_MLOCK = 150, // ['%ebx: unsigned long', '%ecx: size_t']
    SYS_MUNLOCK = 151, // ['%ebx: unsigned long', '%ecx: size_t']
    SYS_MLOCKALL = 152, // ['%ebx: int']
    SYS_MUNLOCKALL = 153, // No arguments
    SYS_SCHED_SETPARAM = 154, // ['%ebx: pid_t', '%ecx: struct sched_param *']
    SYS_SCHED_GETPARAM = 155, // ['%ebx: pid_t', '%ecx: struct sched_param *']
    SYS_SCHED_SETSCHEDULER = 156, // ['%ebx: pid_t', '%ecx: int', '%edx: struct sched_param *']
    SYS_SCHED_GETSCHEDULER = 157, // ['%ebx: pid_t']
    SYS_SCHED_YIELD = 158, // No arguments
    SYS_SCHED_GET_PRIORITY_MAX = 159, // ['%ebx: int']
    SYS_SCHED_GET_PRIORITY_MIN = 160, // ['%ebx: int']
    SYS_SCHED_RR_GET_INTERVAL = 161, // ['%ebx: pid_t', '%ecx: struct timespec *']
    SYS_NANOSLEEP = 162, // ['%ebx: struct timespec *', '%ecx: struct timespec *']
    SYS_MREMAP = 163, // ['%ebx: unsigned long', '%ecx: unsigned long', '%edx: unsigned long', '%esx: unsigned long']
    SYS_SETRESUID = 164, // ['%ebx: uid_t', '%ecx: uid_t', '%edx: uid_t']
    SYS_GETRESUID = 165, // ['%ebx: uid_t *', '%ecx: uid_t *', '%edx: uid_t *']
    SYS_VM86 = 166, // ['%ebx: struct vm86_struct *']
    SYS_QUERY_MODULE = 167, // ['%ebx: const char *', '%ecx: int', '%edx: char *', '%esx: size_t', '%edi: size_t *']
    SYS_POLL = 168, // ['%ebx: struct pollfd *', '%ecx: unsigned int', '%edx: long']
    SYS_NFSSERVCTL = 169, // ['%ebx: int', '%ecx: void *', '%edx: void *']
    SYS_SETRESGID = 170, // ['%ebx: gid_t', '%ecx: gid_t', '%edx: gid_t']
    SYS_GETRESGID = 171, // ['%ebx: gid_t *', '%ecx: gid_t *', '%edx: gid_t *']
    SYS_PRCTL = 172, // ['%ebx: int', '%ecx: unsigned long', '%edx: unsigned long', '%esx: unsigned long', '%edi: unsigned long']
    SYS_RT_SIGRETURN = 173, // ['%ebx: unsigned long']
    SYS_RT_SIGACTION = 174, // ['%ebx: int', '%ecx: const struct sigaction *', '%edx: struct sigaction *', '%esx: size_t']
    SYS_RT_SIGPROCMASK = 175, // ['%ebx: int', '%ecx: sigset_t *', '%edx: sigset_t *', '%esx: size_t']
    SYS_RT_SIGPENDING = 176, // ['%ebx: sigset_t *', '%ecx: size_t']
    SYS_RT_SIGTIMEDWAIT = 177, // ['%ebx: const sigset_t *', '%ecx: siginfo_t *', '%edx: const struct timespec *', '%esx: size_t']
    SYS_RT_SIGQUEUEINFO = 178, // ['%ebx: int', '%ecx: int', '%edx: siginfo_t *']
    SYS_RT_SIGSUSPEND = 179, // ['%ebx: sigset_t *', '%ecx: size_t']
    SYS_PREAD = 180, // ['%ebx: unsigned int', '%ecx: char *', '%edx: size_t', '%esx: loff_t']
    SYS_PWRITE = 181, // ['%ebx: unsigned int', '%ecx: const char *', '%edx: size_t', '%esx: loff_t']
    SYS_CHOWN = 182, // ['%ebx: const char *', '%ecx: uid_t', '%edx: gid_t']
    SYS_GETCWD = 183, // ['%ebx: char *', '%ecx: unsigned long']
    SYS_CAPGET = 184, // ['%ebx: cap_user_header_t', '%ecx: cap_user_data_t']
    SYS_CAPSET = 185, // ['%ebx: cap_user_header_t', '%ecx: const cap_user_data_t']
    SYS_SIGALTSTACK = 186, // ['%ebx: const stack_t *', '%ecx: stack_t *']
    SYS_SENDFILE = 187, // ['%ebx: int', '%ecx: int', '%edx: off_t *', '%esx: size_t']
    SYS_VFORK = 190, // ['%ebx: struct pt_regs']
} SystemCall;
#endif /* __I386_SYSCALLS_H_LOADED */